/*
Package auth GENERATED BY gengo:operator 
DON'T EDIT THIS FILE
*/
package auth

import (
	bytes "bytes"

	github_com_octohelm_courier_pkg_courier "github.com/octohelm/courier/pkg/courier"
	github_com_octohelm_courier_pkg_statuserror "github.com/octohelm/courier/pkg/statuserror"
	github_com_octohelm_kubepkg_pkg_auth "github.com/octohelm/kubepkg/pkg/auth"
)

func init() {
	R.Register(github_com_octohelm_courier_pkg_courier.NewRouter(&ExchangeToken{}))
}

func (*ExchangeToken) ResponseContent() any {
	return new(github_com_octohelm_kubepkg_pkg_auth.Token)
}

func (*ExchangeToken) ResponseErrors() []error {
	return []error{
		&(github_com_octohelm_courier_pkg_statuserror.StatusErr{
			Code: 400,
			Key:  "InvalidGrantType",
			Msg:  "InvalidGrantType",
		}), &(github_com_octohelm_courier_pkg_statuserror.StatusErr{
			Code: 403,
			Key:  "InvalidRefreshToken",
			Msg:  "InvalidRefreshToken",
		}),
	}
}

func init() {
	R.Register(github_com_octohelm_courier_pkg_courier.NewRouter(&ExchangeTokenAlias{}))
}

func (*ExchangeTokenAlias) ResponseContent() any {
	return new(github_com_octohelm_kubepkg_pkg_auth.Token)
}

func (*ExchangeTokenAlias) ResponseErrors() []error {
	return []error{
		&(github_com_octohelm_courier_pkg_statuserror.StatusErr{
			Code: 401,
			Key:  "InvalidOtpPasscode",
			Msg:  "InvalidOtpPasscode",
		}), &(github_com_octohelm_courier_pkg_statuserror.StatusErr{
			Code: 403,
			Key:  "InvalidUserPasscode",
			Msg:  "InvalidUserPasscode",
		}),
	}
}

func init() {
	R.Register(github_com_octohelm_courier_pkg_courier.NewRouter(&Qrcode{}))
}

func (*Qrcode) ResponseContent() any {
	return new(bytes.Buffer)
}
