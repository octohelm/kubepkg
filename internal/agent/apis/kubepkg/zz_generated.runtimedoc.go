/*
Package kubepkg GENERATED BY gengo:runtimedoc
DON'T EDIT THIS FILE
*/
package kubepkg

// nolint:deadcode,unused
func runtimeDoc(v any, names ...string) ([]string, bool) {
	if c, ok := v.(interface {
		RuntimeDoc(names ...string) ([]string, bool)
	}); ok {
		return c.RuntimeDoc(names...)
	}
	return nil, false
}

func (v ApplyKubePkg) RuntimeDoc(names ...string) ([]string, bool) {
	if len(names) > 0 {
		switch names[0] {
		case "KubePkg":
			return []string{
				"通过 KubePkg.json 部署",
			}, true
		case "KubePkgTgz":
			return []string{
				"通过 Kubepkg.tgz 部署",
			}, true

		}

		return nil, false
	}
	return []string{
		"部署部署包",
	}, true
}

func (v DelKubePkg) RuntimeDoc(names ...string) ([]string, bool) {
	if len(names) > 0 {
		switch names[0] {
		case "Name":
			return []string{}, true
		case "Namespace":
			return []string{}, true

		}

		return nil, false
	}
	return []string{
		"删除部署包",
	}, true
}

func (v GetKubePkg) RuntimeDoc(names ...string) ([]string, bool) {
	if len(names) > 0 {
		switch names[0] {
		case "Name":
			return []string{}, true
		case "Namespace":
			return []string{}, true

		}

		return nil, false
	}
	return []string{
		"查询部署包",
	}, true
}

func (v ListKubePkg) RuntimeDoc(names ...string) ([]string, bool) {
	if len(names) > 0 {
		switch names[0] {

		}

		return nil, false
	}
	return []string{
		"部署包列表",
	}, true
}
