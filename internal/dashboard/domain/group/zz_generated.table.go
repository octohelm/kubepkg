/*
Package group GENERATED BY gengo:table
DON'T EDIT THIS FILE
*/
package group

import (
	context "context"

	github_com_octohelm_kubepkg_internal_dashboard_domain_account "github.com/octohelm/kubepkg/internal/dashboard/domain/account"
	github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg "github.com/octohelm/kubepkg/internal/dashboard/domain/kubepkg"
	github_com_octohelm_storage_pkg_datatypes "github.com/octohelm/storage/pkg/datatypes"
	github_com_octohelm_storage_pkg_sqlbuilder "github.com/octohelm/storage/pkg/sqlbuilder"
)

func (Account) TableName() string {
	return "t_group_account"
}

func (Account) Primary() []string {
	return []string{
		"ID",
	}
}

func (Account) UniqueIndexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_group_account": []string{
			"GroupID",
			"AccountID",
		},
	}
}

func (Account) Indexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_created_at": []string{
			"CreatedAt",
		},
		"i_role_type": []string{
			"RoleType",
		},
		"i_updated_at": []string{
			"UpdatedAt",
		},
	}
}

func init() {
	T.Add(AccountT)
}

func (tableAccount) New() github_com_octohelm_storage_pkg_sqlbuilder.Model {
	return &Account{}
}

func (t *tableAccount) IsNil() bool {
	return t.table.IsNil()
}

func (t *tableAccount) Ex(ctx context.Context) *github_com_octohelm_storage_pkg_sqlbuilder.Ex {
	return t.table.Ex(ctx)
}

func (t *tableAccount) TableName() string {
	return t.table.TableName()
}

func (t *tableAccount) F(name string) github_com_octohelm_storage_pkg_sqlbuilder.Column {
	return t.table.F(name)
}

func (t *tableAccount) K(name string) github_com_octohelm_storage_pkg_sqlbuilder.Key {
	return t.table.K(name)
}

func (t *tableAccount) Cols(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection {
	return t.table.Cols(names...)
}

func (t *tableAccount) Keys(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.KeyCollection {
	return t.table.Keys(names...)
}

type tableAccount struct {
	I         indexNameOfAccount
	table     github_com_octohelm_storage_pkg_sqlbuilder.Table
	ID        github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.SFID]
	AccountID github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_kubepkg_internal_dashboard_domain_account.ID]
	GroupID   github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[ID]
	RoleType  github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[RoleType]
	CreatedAt github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
	UpdatedAt github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
}

type indexNameOfAccount struct {
	Primary       github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
	IGroupAccount github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
}

var AccountT = &tableAccount{
	ID:        github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.SFID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).F("ID")),
	AccountID: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_kubepkg_internal_dashboard_domain_account.ID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).F("AccountID")),
	GroupID:   github_com_octohelm_storage_pkg_sqlbuilder.CastCol[ID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).F("GroupID")),
	RoleType:  github_com_octohelm_storage_pkg_sqlbuilder.CastCol[RoleType](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).F("RoleType")),
	CreatedAt: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).F("CreatedAt")),
	UpdatedAt: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).F("UpdatedAt")),

	I: indexNameOfAccount{
		Primary: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).Cols([]string{
			"ID",
		}...),
		IGroupAccount: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}).Cols([]string{
			"GroupID",
			"AccountID",
		}...),
	},
	table: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Account{}),
}

func (Deployment) TableName() string {
	return "t_group_deployment"
}

func (Deployment) Primary() []string {
	return []string{
		"DeploymentID",
	}
}

func (Deployment) UniqueIndexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_deployment_name": []string{
			"GroupEnvID",
			"DeploymentName",
		},
	}
}

func (Deployment) Indexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_updated_at": []string{
			"UpdatedAt",
		},
	}
}

func init() {
	T.Add(DeploymentT)
}

func (tableDeployment) New() github_com_octohelm_storage_pkg_sqlbuilder.Model {
	return &Deployment{}
}

func (t *tableDeployment) IsNil() bool {
	return t.table.IsNil()
}

func (t *tableDeployment) Ex(ctx context.Context) *github_com_octohelm_storage_pkg_sqlbuilder.Ex {
	return t.table.Ex(ctx)
}

func (t *tableDeployment) TableName() string {
	return t.table.TableName()
}

func (t *tableDeployment) F(name string) github_com_octohelm_storage_pkg_sqlbuilder.Column {
	return t.table.F(name)
}

func (t *tableDeployment) K(name string) github_com_octohelm_storage_pkg_sqlbuilder.Key {
	return t.table.K(name)
}

func (t *tableDeployment) Cols(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection {
	return t.table.Cols(names...)
}

func (t *tableDeployment) Keys(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.KeyCollection {
	return t.table.Keys(names...)
}

type tableDeployment struct {
	I              indexNameOfDeployment
	table          github_com_octohelm_storage_pkg_sqlbuilder.Table
	GroupEnvID     github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[EnvID]
	DeploymentID   github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[DeploymentID]
	DeploymentName github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	KubepkgID      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.ID]
	KubepkgChannel github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.Channel]
	CreatedAt      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
	UpdatedAt      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
}

type indexNameOfDeployment struct {
	Primary         github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
	IDeploymentName github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
}

var DeploymentT = &tableDeployment{
	GroupEnvID:     github_com_octohelm_storage_pkg_sqlbuilder.CastCol[EnvID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("GroupEnvID")),
	DeploymentID:   github_com_octohelm_storage_pkg_sqlbuilder.CastCol[DeploymentID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("DeploymentID")),
	DeploymentName: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("DeploymentName")),
	KubepkgID:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.ID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("KubepkgID")),
	KubepkgChannel: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.Channel](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("KubepkgChannel")),
	CreatedAt:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("CreatedAt")),
	UpdatedAt:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).F("UpdatedAt")),

	I: indexNameOfDeployment{
		Primary: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).Cols([]string{
			"DeploymentID",
		}...),
		IDeploymentName: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}).Cols([]string{
			"GroupEnvID",
			"DeploymentName",
		}...),
	},
	table: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Deployment{}),
}

func (DeploymentHistory) TableName() string {
	return "t_group_deployment_history"
}

func (DeploymentHistory) Primary() []string {
	return []string{
		"DeploymentHistoryID",
	}
}

func (DeploymentHistory) Indexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_deployment": []string{
			"DeploymentID",
		},
		"i_kubepkg": []string{
			"KubepkgID",
		},
		"i_kubepkg_revision": []string{
			"KubepkgRevisionID",
		},
		"i_updated_at": []string{
			"CreatedAt",
		},
	}
}

func init() {
	T.Add(DeploymentHistoryT)
}

func (tableDeploymentHistory) New() github_com_octohelm_storage_pkg_sqlbuilder.Model {
	return &DeploymentHistory{}
}

func (t *tableDeploymentHistory) IsNil() bool {
	return t.table.IsNil()
}

func (t *tableDeploymentHistory) Ex(ctx context.Context) *github_com_octohelm_storage_pkg_sqlbuilder.Ex {
	return t.table.Ex(ctx)
}

func (t *tableDeploymentHistory) TableName() string {
	return t.table.TableName()
}

func (t *tableDeploymentHistory) F(name string) github_com_octohelm_storage_pkg_sqlbuilder.Column {
	return t.table.F(name)
}

func (t *tableDeploymentHistory) K(name string) github_com_octohelm_storage_pkg_sqlbuilder.Key {
	return t.table.K(name)
}

func (t *tableDeploymentHistory) Cols(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection {
	return t.table.Cols(names...)
}

func (t *tableDeploymentHistory) Keys(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.KeyCollection {
	return t.table.Keys(names...)
}

type tableDeploymentHistory struct {
	I                   indexNameOfDeploymentHistory
	table               github_com_octohelm_storage_pkg_sqlbuilder.Table
	DeploymentID        github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[DeploymentID]
	DeploymentHistoryID github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[DeploymentHistoryID]
	KubepkgID           github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.ID]
	KubepkgRevisionID   github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.RevisionID]
	DeploymentSettingID github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[DeploymentSettingID]
	CreatedAt           github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
}

type indexNameOfDeploymentHistory struct {
	Primary github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
}

var DeploymentHistoryT = &tableDeploymentHistory{
	DeploymentID:        github_com_octohelm_storage_pkg_sqlbuilder.CastCol[DeploymentID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).F("DeploymentID")),
	DeploymentHistoryID: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[DeploymentHistoryID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).F("DeploymentHistoryID")),
	KubepkgID:           github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.ID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).F("KubepkgID")),
	KubepkgRevisionID:   github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_kubepkg_internal_dashboard_domain_kubepkg.RevisionID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).F("KubepkgRevisionID")),
	DeploymentSettingID: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[DeploymentSettingID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).F("DeploymentSettingID")),
	CreatedAt:           github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).F("CreatedAt")),

	I: indexNameOfDeploymentHistory{
		Primary: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}).Cols([]string{
			"DeploymentHistoryID",
		}...),
	},
	table: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentHistory{}),
}

func (DeploymentSetting) TableName() string {
	return "t_group_deployment_setting"
}

func (DeploymentSetting) Primary() []string {
	return []string{
		"DeploymentSettingID",
	}
}

func (DeploymentSetting) UniqueIndexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_hash": []string{
			"DeploymentID",
			"Digest",
		},
	}
}

func (DeploymentSetting) Indexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_updated_at": []string{
			"CreatedAt",
		},
	}
}

func init() {
	T.Add(DeploymentSettingT)
}

func (tableDeploymentSetting) New() github_com_octohelm_storage_pkg_sqlbuilder.Model {
	return &DeploymentSetting{}
}

func (t *tableDeploymentSetting) IsNil() bool {
	return t.table.IsNil()
}

func (t *tableDeploymentSetting) Ex(ctx context.Context) *github_com_octohelm_storage_pkg_sqlbuilder.Ex {
	return t.table.Ex(ctx)
}

func (t *tableDeploymentSetting) TableName() string {
	return t.table.TableName()
}

func (t *tableDeploymentSetting) F(name string) github_com_octohelm_storage_pkg_sqlbuilder.Column {
	return t.table.F(name)
}

func (t *tableDeploymentSetting) K(name string) github_com_octohelm_storage_pkg_sqlbuilder.Key {
	return t.table.K(name)
}

func (t *tableDeploymentSetting) Cols(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection {
	return t.table.Cols(names...)
}

func (t *tableDeploymentSetting) Keys(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.KeyCollection {
	return t.table.Keys(names...)
}

type tableDeploymentSetting struct {
	I                   indexNameOfDeploymentSetting
	table               github_com_octohelm_storage_pkg_sqlbuilder.Table
	DeploymentSettingID github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[DeploymentSettingID]
	DeploymentID        github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[DeploymentID]
	Digest              github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	EncryptedSetting    github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[[]uint8]
	CreatedAt           github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
}

type indexNameOfDeploymentSetting struct {
	Primary github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
	IHash   github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
}

var DeploymentSettingT = &tableDeploymentSetting{
	DeploymentSettingID: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[DeploymentSettingID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).F("DeploymentSettingID")),
	DeploymentID:        github_com_octohelm_storage_pkg_sqlbuilder.CastCol[DeploymentID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).F("DeploymentID")),
	Digest:              github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).F("Digest")),
	EncryptedSetting:    github_com_octohelm_storage_pkg_sqlbuilder.CastCol[[]uint8](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).F("EncryptedSetting")),
	CreatedAt:           github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).F("CreatedAt")),

	I: indexNameOfDeploymentSetting{
		Primary: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).Cols([]string{
			"DeploymentSettingID",
		}...),
		IHash: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}).Cols([]string{
			"DeploymentID",
			"Digest",
		}...),
	},
	table: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&DeploymentSetting{}),
}

func (Env) TableName() string {
	return "t_group_env"
}

func (Env) Primary() []string {
	return []string{
		"EnvID",
		"DeletedAt",
	}
}

func (Env) UniqueIndexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_env_name": []string{
			"EnvID",
			"EnvName",
		},
	}
}

func (Env) Indexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_bind_clusterid": []string{
			"ClusterID",
		},
		"i_created_at": []string{
			"CreatedAt",
		},
		"i_env_type": []string{
			"EnvType",
		},
		"i_updated_at": []string{
			"UpdatedAt",
		},
	}
}

func init() {
	T.Add(EnvT)
}

func (tableEnv) New() github_com_octohelm_storage_pkg_sqlbuilder.Model {
	return &Env{}
}

func (t *tableEnv) IsNil() bool {
	return t.table.IsNil()
}

func (t *tableEnv) Ex(ctx context.Context) *github_com_octohelm_storage_pkg_sqlbuilder.Ex {
	return t.table.Ex(ctx)
}

func (t *tableEnv) TableName() string {
	return t.table.TableName()
}

func (t *tableEnv) F(name string) github_com_octohelm_storage_pkg_sqlbuilder.Column {
	return t.table.F(name)
}

func (t *tableEnv) K(name string) github_com_octohelm_storage_pkg_sqlbuilder.Key {
	return t.table.K(name)
}

func (t *tableEnv) Cols(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection {
	return t.table.Cols(names...)
}

func (t *tableEnv) Keys(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.KeyCollection {
	return t.table.Keys(names...)
}

type tableEnv struct {
	I            indexNameOfEnv
	table        github_com_octohelm_storage_pkg_sqlbuilder.Table
	EnvID        github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[EnvID]
	GroupID      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[ID]
	EnvName      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	Desc         github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	EnvType      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[EnvType]
	ClusterID    github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.SFID]
	Namespace    github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	RandPassword github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[[]uint8]
	CreatedAt    github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
	UpdatedAt    github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
	DeletedAt    github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
}

type indexNameOfEnv struct {
	Primary  github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
	IEnvName github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
}

var EnvT = &tableEnv{
	EnvID:        github_com_octohelm_storage_pkg_sqlbuilder.CastCol[EnvID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("EnvID")),
	GroupID:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[ID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("GroupID")),
	EnvName:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("EnvName")),
	Desc:         github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("Desc")),
	EnvType:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[EnvType](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("EnvType")),
	ClusterID:    github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.SFID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("ClusterID")),
	Namespace:    github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("Namespace")),
	RandPassword: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[[]uint8](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("RandPassword")),
	CreatedAt:    github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("CreatedAt")),
	UpdatedAt:    github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("UpdatedAt")),
	DeletedAt:    github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).F("DeletedAt")),

	I: indexNameOfEnv{
		Primary: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).Cols([]string{
			"EnvID",
			"DeletedAt",
		}...),
		IEnvName: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}).Cols([]string{
			"EnvID",
			"EnvName",
		}...),
	},
	table: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Env{}),
}

func (Group) TableName() string {
	return "t_group"
}

func (Group) Primary() []string {
	return []string{
		"ID",
		"DeletedAt",
	}
}

func (Group) UniqueIndexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_group_name": []string{
			"Name",
		},
	}
}

func (Group) Indexes() github_com_octohelm_storage_pkg_sqlbuilder.Indexes {
	return github_com_octohelm_storage_pkg_sqlbuilder.Indexes{
		"i_created_at": []string{
			"CreatedAt",
		},
		"i_updated_at": []string{
			"UpdatedAt",
		},
	}
}

func init() {
	T.Add(GroupT)
}

func (tableGroup) New() github_com_octohelm_storage_pkg_sqlbuilder.Model {
	return &Group{}
}

func (t *tableGroup) IsNil() bool {
	return t.table.IsNil()
}

func (t *tableGroup) Ex(ctx context.Context) *github_com_octohelm_storage_pkg_sqlbuilder.Ex {
	return t.table.Ex(ctx)
}

func (t *tableGroup) TableName() string {
	return t.table.TableName()
}

func (t *tableGroup) F(name string) github_com_octohelm_storage_pkg_sqlbuilder.Column {
	return t.table.F(name)
}

func (t *tableGroup) K(name string) github_com_octohelm_storage_pkg_sqlbuilder.Key {
	return t.table.K(name)
}

func (t *tableGroup) Cols(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection {
	return t.table.Cols(names...)
}

func (t *tableGroup) Keys(names ...string) github_com_octohelm_storage_pkg_sqlbuilder.KeyCollection {
	return t.table.Keys(names...)
}

type tableGroup struct {
	I         indexNameOfGroup
	table     github_com_octohelm_storage_pkg_sqlbuilder.Table
	ID        github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[ID]
	Name      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	Desc      github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[string]
	CreatedAt github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
	UpdatedAt github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
	DeletedAt github_com_octohelm_storage_pkg_sqlbuilder.TypedColumn[github_com_octohelm_storage_pkg_datatypes.Timestamp]
}

type indexNameOfGroup struct {
	Primary    github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
	IGroupName github_com_octohelm_storage_pkg_sqlbuilder.ColumnCollection
}

var GroupT = &tableGroup{
	ID:        github_com_octohelm_storage_pkg_sqlbuilder.CastCol[ID](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).F("ID")),
	Name:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).F("Name")),
	Desc:      github_com_octohelm_storage_pkg_sqlbuilder.CastCol[string](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).F("Desc")),
	CreatedAt: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).F("CreatedAt")),
	UpdatedAt: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).F("UpdatedAt")),
	DeletedAt: github_com_octohelm_storage_pkg_sqlbuilder.CastCol[github_com_octohelm_storage_pkg_datatypes.Timestamp](github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).F("DeletedAt")),

	I: indexNameOfGroup{
		Primary: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).Cols([]string{
			"ID",
			"DeletedAt",
		}...),
		IGroupName: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}).Cols([]string{
			"Name",
		}...),
	},
	table: github_com_octohelm_storage_pkg_sqlbuilder.TableFromModel(&Group{}),
}
